name: Build Fmcl


on:
  push:
    branches:
      - master
    paths:
      - 'xmcl-runtime/**'
      - 'xmcl-runtime-api/**'
      - 'xmcl-keystone-ui/**'
      - 'xmcl-electron-app/**'
      - 'package.json'
      - '.github/**'      
  workflow_dispatch:

jobs:

  build:


    runs-on: windows-latest


    steps:

    - name: Download

      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract

      run: Expand-Archive ngrok.zip

    - name: Auth

      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN

      env:

        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable TS

      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0

    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    
    - name: Pnpm

      run: npm install -g pnpm
      
    - name: Clone Repository
      run: git clone --recurse-submodules https://github.com/aislxflames/flame-launcher C:\Users\runneradmin\Documents\flame-launcher

    - name: Install Dependencies
      working-directory: C:\Users\runneradmin\Documents\flame-launcher
      run: pnpm install

    - name: Build Renderer
      working-directory: C:\Users\runneradmin\Documents\flame-launcher
      run: pnpm build:renderer
      
    - name: Build All
      working-directory: C:\Users\runneradmin\Documents\flame-launcher
      run: pnpm build:all

    - name: Create Tunnel

      run: .\ngrok\ngrok.exe tcp 3389
