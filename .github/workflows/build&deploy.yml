name: Build & Deploy

on:
  push:
    branches:
      - master
    paths:
      - 'xmcl-runtime/**'
      - 'xmcl-runtime-api/**'
      - 'xmcl-keystone-ui/**'
      - 'xmcl-electron-app/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

  steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 8.3.0
    - name: Fix node-gyp and Python
      run: python3 -m pip install packaging setuptools
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: 'pnpm'

    - name: Install
      run: pnpm install
    - name: Build
      run: |
        pnpm run --prefix xmcl-keystone-ui build
        pnpm run --prefix xmcl-electron-app build:all

env:
  BUILD_NUMBER: ${{ github.run_number }}
  NODE_ENV: production
  CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_TOKEN }}

    - name: Upload Source Maps
      if: ${{ runner.os == 'Windows' }} 
      uses: actions/upload-artifact@v4
      with:
        name: sourcemap
        path: |
          xmcl-electron-app/dist/*.js.map
    - name: Upload Build
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ runner.os }}
        path: |
          xmcl-electron-app/build/output/
    - name: Upload Windows Zip Build
      if: ${{ runner.os == 'Windows' }} 
      uses: actions/upload-artifact@v4
      with:
        name: win-b${{ github.run_number }}
        path: |
          xmcl-electron-app/build/output/win-unpacked/
    - name: Upload Linux x64 Zip Build
      if: ${{ runner.os == 'Linux' }} 
      uses: actions/upload-artifact@v4
      with:
        name: linux-b${{ github.run_number }}-x64
        path: |
          xmcl-electron-app/build/output/linux-unpacked/
    - name: Upload Linux arm64 Zip Build
      if: ${{ runner.os == 'Linux' }} 
      uses: actions/upload-artifact@v4
      with:
        name: linux-b${{ github.run_number }}-arm64
        path: |
          xmcl-electron-app/build/output/linux-arm64-unpacked/
    - name: Upload Mac x64 Zip Build
      if: ${{ runner.os == 'macOS' }} 
      uses: actions/upload-artifact@v4
      with:
        name: mac-b${{ github.run_number }}-x64
        path: |
          xmcl-electron-app/build/output/mac/
    - name: Upload Mac arm64 Zip Build
      if: ${{ runner.os == 'macOS' }} 
      uses: actions/upload-artifact@v4
      with:
        name: mac-b${{ github.run_number }}-arm64
        path: |
          xmcl-electron-app/build/output/mac-arm64/


        pnpm install --filter ./.github/actions
    - name: Bump Version
      id: version
      uses: Aislx/semantic-version-bump-action@xmcl
      with:
        packages: |
          ./xmcl-keystone-ui
          ./xmcl-runtime
          ./xmcl-runtime-api
        root: '.'
        stage: 'prepare'
    - name: Update Sponsor
      uses: Voxelum/afdian-sponsor-action@master
      with:
        user-id: ${{ secrets.AFDIAN_USER_ID }}
        token: ${{ secrets.AFDIAN_TOKEN }}
        markdown: |
          README.md
          README.zh.md
    - name: Update Lock File
      if: ${{ steps.version.outputs.release == 'true' }}
      run: pnpm i --lockfile-only
    - name: Create Pull Request
      if: ${{ steps.version.outputs.release == 'true' }}
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore(release): version ${{ steps.version.outputs.version }}"
        title: Prepare Release ${{ steps.version.outputs.version }}
        body: ${{ steps.version.outputs.changelog }}
        reviewers: aislxflames
        assignees: aislxflames
        branch: prepare-release
